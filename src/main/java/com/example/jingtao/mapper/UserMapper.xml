<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.jingtao.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.jingtao.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="openid" jdbcType="VARCHAR" property="openid"/>
        <result column="school" jdbcType="VARCHAR" property="school"/>
        <result column="college" jdbcType="VARCHAR" property="college"/>
        <result column="major" jdbcType="VARCHAR" property="major"/>
        <result column="grade" jdbcType="INTEGER" property="grade"/>
        <result column="banji" jdbcType="VARCHAR" property="banji"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        openid, school, college, major, grade, banji
    </sql>
    <select id="selectByExample" parameterType="com.example.jingtao.entity.UserExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from user
        where openid = #{openid,jdbcType=VARCHAR}
    </select>
    <select id="selectByBanji" resultType="com.example.jingtao.entity.User">
        select *
        from user
        where school = #{school}
          and college = #{college}
          and major = #{major}
          and grade = #{grade}
          and banji = #{banji}
    </select>
    <select id="selectByGrade" resultType="com.example.jingtao.entity.User">
        select *
        from user
        where school = #{school}
          and college = #{college}
          and major = #{major}
          and grade = #{grade}

    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from user
        where openid = #{openid,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.jingtao.entity.UserExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.jingtao.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user (openid, school, college,
        major, grade, banji
        )
        values (#{openid,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR},
        #{major,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, #{banji,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.example.jingtao.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="openid != null">
                openid,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="college != null">
                college,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="banji != null">
                banji,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="college != null">
                #{college,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                #{major,jdbcType=VARCHAR},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=INTEGER},
            </if>
            <if test="banji != null">
                #{banji,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.jingtao.entity.UserExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        <set>
            <if test="record.openid != null">
                openid = #{record.openid,jdbcType=VARCHAR},
            </if>
            <if test="record.school != null">
                school = #{record.school,jdbcType=VARCHAR},
            </if>
            <if test="record.college != null">
                college = #{record.college,jdbcType=VARCHAR},
            </if>
            <if test="record.major != null">
                major = #{record.major,jdbcType=VARCHAR},
            </if>
            <if test="record.grade != null">
                grade = #{record.grade,jdbcType=INTEGER},
            </if>
            <if test="record.banji != null">
                banji = #{record.banji,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        set openid = #{record.openid,jdbcType=VARCHAR},
        school = #{record.school,jdbcType=VARCHAR},
        college = #{record.college,jdbcType=VARCHAR},
        major = #{record.major,jdbcType=VARCHAR},
        grade = #{record.grade,jdbcType=INTEGER},
        banji = #{record.banji,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.jingtao.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        <set>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="college != null">
                college = #{college,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                major = #{major,jdbcType=VARCHAR},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=INTEGER},
            </if>
            <if test="banji != null">
                banji = #{banji,jdbcType=VARCHAR},
            </if>
        </set>
        where openid = #{openid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.jingtao.entity.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update user
        set school = #{school,jdbcType=VARCHAR},
        college = #{college,jdbcType=VARCHAR},
        major = #{major,jdbcType=VARCHAR},
        grade = #{grade,jdbcType=INTEGER},
        banji = #{banji,jdbcType=VARCHAR}
        where openid = #{openid,jdbcType=VARCHAR}
    </update>
</mapper>